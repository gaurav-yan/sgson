/// <reference types="Cypress" />
import DeviceList from "../../support/PageObjects/DeviceList";
import DotInformation from "../../support/PageObjects/DotInformation";
import LinkInformation from "../../support/PageObjects/LinkInformation";
import SPCInformation from "../../support/PageObjects/SPCInformation";

describe('Check Device Details Tooltips', () => {
  const deviceList= new DeviceList();
  const dotDetails = new DotInformation()
  const linkDetails = new LinkInformation()
  const spcDetails = new SPCInformation()
  before(function () {
    // "this" points at the test context object
  })
  beforeEach(function () {
    cy.fixture('tooltips.json').as('Tooltip')
    cy.visit('https://connecttestingweb-lrsb4.ondigitalocean.app/')
    cy.loginClientAdmin()
    cy.visit('https://connecttestingweb-lrsb4.ondigitalocean.app/')
  })
  it.skip('Check Dot Details screen tooltips', function () {
    deviceList.getDeviceTypeFilter().click()
    deviceList.getFilterOption('Dot').click()
    deviceList.getTableRow(1).click()
    dotDetails.getDeviceNameEditButtonTooltip().should('have.attr', 'mattooltip', this.Tooltip.EditDeviceName)
    dotDetails.getBatteryLevelTooltip().click()
    cy.tooltip().should('contain.text', this.Tooltip.BatteryLevel).type('{esc}')
    dotDetails.getFillLevelTooltip().click()
    cy.tooltip().should('contain.text', this.Tooltip.FillLevel).type('{esc}')
    dotDetails.getLastReadingTooltip().click()
    cy.tooltip().should('contain.text', this.Tooltip.LastReading).type('{esc}')
    dotDetails.getStatusTooltip().click()
    cy.tooltip().should('contain.text', this.Tooltip.DotStatus).type('{esc}')
    dotDetails.getLastSeenTooltip().click()
    cy.tooltip().should('contain.text', this.Tooltip.LastSeenAt).type('{esc}')
    dotDetails.getBatteryChangeTooltip().click()
    cy.tooltip().should('contain.text', this.Tooltip.BatteryChangedAt).type('{esc}')
    //dotDetails.getFirmwareUpdateTooltip().click()
    //cy.tooltip().should('contain.text', this.Tooltip.DotFirmwareLastUpdated).type('{esc}')
    dotDetails.getAssignLinkTooltip().click()
    cy.tooltip().should('contain.text', this.Tooltip.AssignLink).type('{esc}')
    dotDetails.getSendReadingTooltip().click()
    cy.tooltip().should('contain.text', this.Tooltip.DotSendReading).type('{esc}')
    dotDetails.getSendHealthInfoTooltip().click()
    cy.tooltip().should('contain.text', this.Tooltip.DotSendHealth).type('{esc}')
    dotDetails.getFirmwareVersionTooltip().click()
    cy.tooltip().should('contain.text', this.Tooltip.DotFirmwareVersion).type('{esc}')
  })
  it.skip('Check Link Details screen tooltips', function () {
    deviceList.getDeviceTypeFilter().click()
    deviceList.getFilterOption('Link').click()
    deviceList.getTableRow(1).click()
    linkDetails.getDeviceNameEditButtonTooltip().should('have.attr', 'mattooltip', this.Tooltip.EditDeviceName)
    linkDetails.getStatusTooltip().click()
    cy.tooltip().should('contain.text', this.Tooltip.LinkStatus).type('{esc}')
    linkDetails.getFirmwareUpdateTooltip().click()
    cy.tooltip().should('contain.text', this.Tooltip.LinkFirmwareLastUpdated).type('{esc}')
    linkDetails.getNetworkTypeTooltip().click()
    cy.tooltip().should('contain.text', this.Tooltip.NetworkType).type('{esc}')
    linkDetails.getNetworkTypeList().click()
    linkDetails.selectNetworkType('Wi-Fi').click()
    //linkDetails.getSSIDTooltip().click()
    //cy.tooltip().should('contain.text', this.Tooltip.SSID).type('{esc}')
    //linkDetails.getPasswordTooltip().click()
    //cy.tooltip().should('contain.text', this.Tooltip.WiFiPassword).type('{esc}')
    linkDetails.getRetainDotReadingTooltip().click()
    cy.tooltip().should('contain.text', this.Tooltip.RetailsDotReadings).type('{esc}')
    linkDetails.getSendHealthDataTooltip().click()
    cy.tooltip().should('contain.text', this.Tooltip.SendHealthData).type('{esc}')
    linkDetails.getFirmwareVersionTooltip().click()
    cy.tooltip().should('contain.text', this.Tooltip.LinkFirmwareVersion).type('{esc}')
    linkDetails.getConfigurationTabTooltip().should('have.attr', 'mattooltip', this.Tooltip.LinkConfigurations)
    linkDetails.getIntegrationsTabTooltip().should('have.attr', 'mattooltip', this.Tooltip.LinkIntegrations)
    linkDetails.getConnectedDevicesTabTooltip().should('have.attr', 'mattooltip', this.Tooltip.LinkConnectedDevices)
  })
  it('Check SPC Details Tooltips', function () {
    deviceList.getDeviceTypeFilter().click()
    deviceList.getFilterOption('SPC').click()
    deviceList.getTableRow(1).click()
    spcDetails.getUseAsPowerStripTooltip().click()
    cy.tooltip().should('contain.text', this.Tooltip.SPCPowerStrip).type('{esc}')
    spcDetails.getRebootButtonTooltip().should('have.attr', 'mattooltip', this.Tooltip.SPCReboot)
    spcDetails.getFactoryResetButtonTooltip().should('have.attr', 'mattooltip', this.Tooltip.SPCFactoryReset)
    spcDetails.getStatusTooltip().click()
    cy.tooltip().should('contain.text', this.Tooltip.SPCStatus).type('{esc}')
    //spcDetails.getLastSeenAtTooltip().click()
    //cy.tooltip().should('contain.text', this.Tooltip.SPCLastSeenAt).type('{esc}')
    spcDetails.getLastRebootTooltip().click()
    cy.tooltip().should('contain.text', this.Tooltip.SPCLastReboot).type('{esc}')
    spcDetails.getLastPingFailureAtTooltip().click()
    cy.tooltip().should('contain.text', this.Tooltip.SPCPingFailure).type('{esc}')
    spcDetails.getFirmwareUpdateTooltip().click()
    cy.tooltip().should('contain.text', this.Tooltip.SPCFirmwareUpdate).type('{esc}')
    spcDetails.getPingFrequencyTooltip().click()
    cy.tooltip().should('contain.text', this.Tooltip.SPCPingFrequency).type('{esc}')
    spcDetails.getPingFailureThresholdTooltip().click()
    cy.tooltip().should('contain.text', this.Tooltip.SPCPingFailureThreshold).type('{esc}')
    spcDetails.getDurationToSkipRebootTooltip().click()
    cy.tooltip().should('contain.text', this.Tooltip.SPCSkipDuration).type('{esc}')
    spcDetails.getCaptureHealthTooltip().click()
    cy.tooltip().should('contain.text', this.Tooltip.SPCCaptureHealthData).type('{esc}')
    spcDetails.getPrimaryIPUrlTooltip().click()
    cy.tooltip().should('contain.text', this.Tooltip.SPCPingIPUrl).type('{esc}')
    spcDetails.getSecondaryIPUrlTooltip().click()
    cy.tooltip().should('contain.text', this.Tooltip.SPCPingIPUrl).type('{esc}')
    spcDetails.getLowerVoltageThresholdTooltip().click()
    cy.tooltip().should('contain.text', this.Tooltip.SPCLowestVoltage).type('{esc}')
    spcDetails.getHigherVoltageThresholdTooltip().click()
    cy.tooltip().should('contain.text', this.Tooltip.SPCHighestVoltage).type('{esc}')
    spcDetails.getFirmwareVersionTooltip().click()
    cy.tooltip().should('contain.text', this.Tooltip.SPCFirmwareVersion).type('{esc}')
    spcDetails.getConfigurationTabTooltip().should('have.attr', 'mattooltip', this.Tooltip.SPCConfiguration)
    spcDetails.getAnalyticsTabTooltip().should('have.attr', 'mattooltip', this.Tooltip.SPCAnalytics)
    spcDetails.getReportsTabTooltip().should('have.attr', 'mattooltip', this.Tooltip.SPCReports)
    spcDetails.getAnalyticsTab().click()
    spcDetails.getPredictiveReportByTooltip().click()
    cy.tooltip().should('contain.text', this.Tooltip.SPCPredictiveReportBy).type('{esc}')
    spcDetails.getReportTypeFilter().click()
    spcDetails.selectReportTypeRebootOption().click()
    spcDetails.getAnalyticsApplyButtonTooltip().should('have.attr', 'mattooltip', this.Tooltip.SPCAnalyticsApplyButton)
    spcDetails.getAnalyticsExportButtonTooltip().should('have.attr', 'mattooltip', this.Tooltip.SPCAnalyticsExportButton)
    spcDetails.getReportsTab().click()
    spcDetails.getDataTypeTooltip().click()
    cy.tooltip().should('contain.text', this.Tooltip.SPCReportDataType).type('{esc}')
    spcDetails.getTimeZoneTooltip().click()
    cy.tooltip().should('contain.text', this.Tooltip.SPCReportTimeZone).type('{esc}')
    spcDetails.getFromDateTooltip().click()
    cy.tooltip().should('contain.text', this.Tooltip.SPCReportFromDate).type('{esc}')
    spcDetails.getToDateTooltip().click()
    cy.tooltip().should('contain.text', this.Tooltip.SPCReportToDate).type('{esc}')
    spcDetails.getApplyButtonTooltip().should('have.attr', 'mattooltip', this.Tooltip.SPCReportApplyButton)
    spcDetails.getExportReportButtonTooltip().should('have.attr', 'mattooltip', this.Tooltip.SPCReportExportButton)
  })
})